import streamlit as st
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Load your dataset
data = pd.read_csv("/Users/isatadaramy/Downloads/laterite_mobilemoney_data.csv")

# Descriptive statistics
st.write("## Descriptive Statistics")
st.write(data.describe()) 

# Visualizations
st.write("## Visualizations")
# Example: Histogram
sns.histplot(data['hhid'])
st.pyplot()



# Replace 'mm_account_telco_main' with the actual column name representing the mobile money providers

# Calculating Market shares
market_share = data['mm_account_telco_main'].value_counts(normalize=True) * 100

# Display market share percentages
st.write("Market Share Percentages:")
st.write(market_share)

# Visualization
st.set_option('deprecation.showPyplotGlobalUse', False)  # To avoid warning about showPyplotGlobalUse

plt.figure(figsize=(8, 6))
sns.barplot(x=market_share.index, y=market_share.values, palette='viridis')
plt.title('Market Share of Mobile Money Providers')
plt.xlabel('Providers')
plt.ylabel('Market Share (%)')
plt.xticks(rotation=45)
st.pyplot()


# Data for the pie chart
providers = market_share.index.tolist()
market_share_percentages = market_share.values.tolist()

# Creating the pie chart
fig, ax = plt.subplots(figsize=(8, 8))
ax.pie(market_share_percentages, labels=providers, autopct='%1.1f%%', startangle=140)
ax.set_title('Market Share of Mobile Money Providers')
ax.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.

# Display the chart in Streamlit
st.pyplot(fig)


import streamlit as st
from scipy.stats import chi2_contingency

# Assuming df is your DataFrame containing the provided dataset
# Replace 'mm_account_telco_main' and 'district' with the actual column names in your DataFrame

# Creating a contingency table
contingency_table = pd.crosstab(data['mm_account_telco_main'], data['district'])

# Performing the chi-square test
chi2, p_val, _, _ = chi2_contingency(contingency_table)

# Displaying results in Streamlit
st.write("Contingency Table:")
st.write(contingency_table)

st.write(f"Chi-square statistic: {chi2}")
st.write(f"P-value: {p_val}")

# Interpretation of the results
if p_val < 0.05:
    st.write("The chi-square test suggests a significant association between mobile money providers and districts.")
else:
    st.write("The chi-square test does not indicate a significant association between mobile money providers and districts.")

# Creating a contingency table
contingency_table = pd.crosstab(data['mm_account_telco_main'], data['district'])

# Displaying the contingency table in Streamlit
st.write("Contingency Table:")
st.write(contingency_table)


# Visualizing the association using a heatmap
plt.figure(figsize=(8, 6))
sns.heatmap(contingency_table, annot=True, cmap='YlGnBu', fmt='d')
plt.title('Association Between Main Mobile Money Account and District')
plt.xlabel('District')
plt.ylabel('Main Mobile Money Account')

# Display the heatmap in Streamlit
st.pyplot()

# Create a pivot table to aggregate counts by district and main mobile money account
pivot_table = data.pivot_table(index='district', columns='mm_account_telco_main', aggfunc='size', fill_value=0)

# Plotting the stacked bar chart
plt.figure(figsize=(10, 6))
pivot_table.plot(kind='bar', stacked=True, colormap='viridis')
plt.title('Distribution of Main Mobile Money Accounts by District')
plt.xlabel('District')
plt.ylabel('Count')
plt.legend(title='Main Mobile Money Account')
plt.xticks(rotation=45)

# Display the stacked bar chart in Streamlit
st.pyplot()

# Variables for creating example plots
districts = ['District A', 'District B', 'District C']
urban_rural = ['Urban', 'Rural']

# Example data for subplot visualizations
x = np.arange(len(districts))
y1 = np.array([50, 30, 20])  # Example data for Company A distribution across districts
y2 = np.array([40, 50, 10])  # Example data for Company B distribution across districts
y3 = np.array([30, 35, 35])  # Example data for Company C distribution across districts
data = np.random.rand(len(urban_rural), len(districts))  # Example data for heatmap visualization

# Chi-square statistics
chi_square_statistic = 132.87582361297183
p_value = 9.44681971565467e-2

# Creating subplots
fig, axs = plt.subplots(2, 2, figsize=(12, 10))

# Subplot 1: Stacked bar chart for distribution of mobile money providers across districts
axs[0, 0].bar(x, y1, label='Company A')
axs[0, 0].bar(x, y2, bottom=y1, label='Company B')
axs[0, 0].bar(x, y3, bottom=y1+y2, label='Company C')
axs[0, 0].set_xticks(x)
axs[0, 0].set_xticklabels(districts)
axs[0, 0].set_title('Mobile Money Providers Across Districts')
axs[0, 0].legend()

# Subplot 2: Heatmap illustrating associations between districts, urban/rural locations, and mobile money accounts
axs[0, 1].imshow(data, cmap='viridis', interpolation='nearest')
axs[0, 1].set_xticks(np.arange(len(districts)))
axs[0, 1].set_xticklabels(districts)
axs[0, 1].set_yticks(np.arange(len(urban_rural)))
axs[0, 1].set_yticklabels(urban_rural)
axs[0, 1].set_title('Associations Between Districts, Urban/Rural Locations, and Mobile Money Accounts')

# Subplot 3: Displaying Chi-square statistic and p-value
axs[1, 0].text(0.5, 0.5, f"Chi-square statistic: {chi_square_statistic:.2f}\nP-value: {p_value:.2e}", ha='center')
axs[1, 0].axis('off')
axs[1, 0].set_title('Chi-square Statistic and P-value')

# Adjusting layout
plt.tight_layout()

# Displaying the plot in Streamlit
st.pyplot(fig)

<iframe src="http://localhost:8501" width="100%" height="600"></iframe>
